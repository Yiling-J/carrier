// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// IngredientsColumns holds the columns for the "ingredients" table.
	IngredientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// IngredientsTable holds the schema information for the "ingredients" table.
	IngredientsTable = &schema.Table{
		Name:       "ingredients",
		Columns:    IngredientsColumns,
		PrimaryKey: []*schema.Column{IngredientsColumns[0]},
	}
	// RecipesColumns holds the columns for the "recipes" table.
	RecipesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "servings", Type: field.TypeInt},
		{Name: "user_recipes", Type: field.TypeInt, Nullable: true},
	}
	// RecipesTable holds the schema information for the "recipes" table.
	RecipesTable = &schema.Table{
		Name:       "recipes",
		Columns:    RecipesColumns,
		PrimaryKey: []*schema.Column{RecipesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "recipes_users_recipes",
				Columns:    []*schema.Column{RecipesColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RecipeIngredientsColumns holds the columns for the "recipe_ingredients" table.
	RecipeIngredientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantity", Type: field.TypeFloat32},
		{Name: "unit", Type: field.TypeString},
		{Name: "ingredient_recipe_ingredients", Type: field.TypeInt, Nullable: true},
		{Name: "recipe_recipe_ingredients", Type: field.TypeInt, Nullable: true},
	}
	// RecipeIngredientsTable holds the schema information for the "recipe_ingredients" table.
	RecipeIngredientsTable = &schema.Table{
		Name:       "recipe_ingredients",
		Columns:    RecipeIngredientsColumns,
		PrimaryKey: []*schema.Column{RecipeIngredientsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "recipe_ingredients_ingredients_recipe_ingredients",
				Columns:    []*schema.Column{RecipeIngredientsColumns[3]},
				RefColumns: []*schema.Column{IngredientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "recipe_ingredients_recipes_recipe_ingredients",
				Columns:    []*schema.Column{RecipeIngredientsColumns[4]},
				RefColumns: []*schema.Column{RecipesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StepsColumns holds the columns for the "steps" table.
	StepsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "text", Type: field.TypeString},
		{Name: "recipe_steps", Type: field.TypeInt, Nullable: true},
	}
	// StepsTable holds the schema information for the "steps" table.
	StepsTable = &schema.Table{
		Name:       "steps",
		Columns:    StepsColumns,
		PrimaryKey: []*schema.Column{StepsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "steps_recipes_steps",
				Columns:    []*schema.Column{StepsColumns[2]},
				RefColumns: []*schema.Column{RecipesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// RecipeTagsColumns holds the columns for the "recipe_tags" table.
	RecipeTagsColumns = []*schema.Column{
		{Name: "recipe_id", Type: field.TypeInt},
		{Name: "category_id", Type: field.TypeInt},
	}
	// RecipeTagsTable holds the schema information for the "recipe_tags" table.
	RecipeTagsTable = &schema.Table{
		Name:       "recipe_tags",
		Columns:    RecipeTagsColumns,
		PrimaryKey: []*schema.Column{RecipeTagsColumns[0], RecipeTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "recipe_tags_recipe_id",
				Columns:    []*schema.Column{RecipeTagsColumns[0]},
				RefColumns: []*schema.Column{RecipesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "recipe_tags_category_id",
				Columns:    []*schema.Column{RecipeTagsColumns[1]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CategoriesTable,
		IngredientsTable,
		RecipesTable,
		RecipeIngredientsTable,
		StepsTable,
		UsersTable,
		RecipeTagsTable,
	}
)

func init() {
	RecipesTable.ForeignKeys[0].RefTable = UsersTable
	RecipeIngredientsTable.ForeignKeys[0].RefTable = IngredientsTable
	RecipeIngredientsTable.ForeignKeys[1].RefTable = RecipesTable
	StepsTable.ForeignKeys[0].RefTable = RecipesTable
	RecipeTagsTable.ForeignKeys[0].RefTable = RecipesTable
	RecipeTagsTable.ForeignKeys[1].RefTable = CategoriesTable
}
